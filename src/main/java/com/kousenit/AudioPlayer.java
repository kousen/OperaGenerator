package com.kousenit;

import javazoom.jl.decoder.JavaLayerException;
import javazoom.jl.player.Player;
import java.io.FileInputStream;
import java.io.IOException;
import java.nio.file.Path;

/**
 * Simple audio player for demonstration purposes.
 * Uses JLayer to play MP3 files generated by ElevenLabs.
 */
public class AudioPlayer {
    
    /**
     * Play an audio file (blocking call).
     * Perfect for presentation demos.
     */
    public static void play(Path audioFile) throws IOException, JavaLayerException {
        System.out.println("üéµ Playing: " + audioFile.getFileName());
        
        try (var fileInputStream = new FileInputStream(audioFile.toFile())) {
            Player player = new Player(fileInputStream);
            player.play();
        }
        
        System.out.println("‚úÖ Finished playing: " + audioFile.getFileName());
    }
    
    /**
     * Play audio file in a separate thread (non-blocking).
     * Useful when you want to continue with other operations.
     */
    public static Thread playAsync(Path audioFile) {
        Thread audioThread = Thread.ofVirtual().start(() -> {
            try {
                play(audioFile);
            } catch (Exception e) {
                System.err.println("‚ùå Error playing audio: " + e.getMessage());
            }
        });
        
        return audioThread;
    }
    
    /**
     * Simple demo method to test audio playback.
     */
    public static void main(String[] args) {
        if (args.length == 0) {
            System.out.println("Usage: java AudioPlayer <path-to-mp3-file>");
            return;
        }
        
        try {
            Path audioFile = Path.of(args[0]);
            play(audioFile);
        } catch (Exception e) {
            System.err.println("Error: " + e.getMessage());
        }
    }
}