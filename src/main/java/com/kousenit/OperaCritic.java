package com.kousenit;

import dev.langchain4j.data.message.SystemMessage;
import dev.langchain4j.data.message.UserMessage;
import dev.langchain4j.model.chat.ChatModel;
import dev.langchain4j.model.chat.response.ChatResponse;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.List;

/**
 * Uses Google's Gemini model to provide literary criticism of generated operas.
 */
public class OperaCritic {
    
    private final ChatModel gemini = AiModels.GEMINI_FLASH_25;
    
    /**
     * Generate a critical review of an opera libretto.
     * 
     * @param librettoPath Path to the libretto markdown file
     * @param operaTitle The title of the opera
     * @return The critical review as a string
     */
    public String reviewOpera(Path librettoPath, String operaTitle) throws IOException {
        // Read the libretto content
        String librettoContent = Files.readString(librettoPath);
        
        // Create the critique prompt
        String query = String.format("""
                Write a detailed literary critique of the following
                libretto, from an opera entitled "%s",
                suitable for a newspaper review or academic journal.
                
                Consider the following aspects:
                - The originality and creativity of the premise
                - Character development and dramatic arc
                - Quality of the libretto's poetry and language
                - Theatrical effectiveness and staging potential
                - The alternating writing styles of the AI collaborators
                - How well it adheres to or subverts operatic conventions
                - The ending and overall narrative structure
                
                Please write as a professional opera critic would, with both
                praise and constructive criticism where appropriate.
                
                Here is the libretto:
                
                %s
                """, operaTitle, librettoContent);
        
        // Get Gemini's critique
        ChatResponse response = gemini.chat(
                List.of(
                        SystemMessage.from("""
                                You are an experienced music critic
                                with a deep knowledge of opera history,
                                dramatic structure, and contemporary theater.
                                You write for major publications and are known
                                for insightful, balanced criticism that considers
                                both artistic merit and audience appeal.
                                """),
                        UserMessage.from(query)
                )
        );
        
        return response.aiMessage().text();
    }
    
    /**
     * Save a critique to a markdown file in the opera's directory.
     * 
     * @param critique The critique text
     * @param operaDir The directory containing the opera files
     * @param operaTitle The title of the opera
     */
    public void saveCritique(String critique, Path operaDir, String operaTitle) throws IOException {
        String filename = operaTitle.toLowerCase()
                .replaceAll("[^a-z0-9\\s]", "")
                .replaceAll("\\s+", "_") + "_critique.md";
        
        Path critiquePath = operaDir.resolve(filename);
        
        // Format the critique as markdown
        String formattedCritique = String.format("""
                # Critical Review: %s
                
                *Generated by Google Gemini*
                
                ---
                
                %s
                """, operaTitle, critique);
        
        Files.writeString(critiquePath, formattedCritique);
        System.out.println("üìù Critique saved to: " + critiquePath.getFileName());
    }
    
    /**
     * Review an opera and save the critique.
     */
    public void reviewAndSave(Path operaDir, String operaTitle) throws IOException {
        // Find the complete libretto file
        Path librettoPath = operaDir.resolve(
                operaTitle.toLowerCase()
                        .replaceAll("[^a-z0-9\\s]", "")
                        .replaceAll("\\s+", "_") + "_complete_libretto.md"
        );
        
        if (!Files.exists(librettoPath)) {
            throw new IOException("Libretto file not found: " + librettoPath);
        }
        
        System.out.println("üé≠ Generating critical review with Google Gemini...");
        String critique = reviewOpera(librettoPath, operaTitle);
        
        System.out.println("\n" + "=".repeat(60));
        System.out.println("CRITICAL REVIEW");
        System.out.println("=".repeat(60));
        System.out.println(critique);
        System.out.println("=".repeat(60) + "\n");
        
        saveCritique(critique, operaDir, operaTitle);
    }
    
    public static void main(String[] args) {
        try {
            OperaCritic critic = new OperaCritic();
            Path operaDir = Path.of("src/main/resources/hartford_ascending_an_opera_of_love_and_ruins");
            String operaTitle = "Hartford Ascending: An Opera of Love and Ruins";
            
            critic.reviewAndSave(operaDir, operaTitle);
        } catch (IOException e) {
            System.err.println("Error generating critique: " + e.getMessage());
            e.printStackTrace();
        }
    }
}